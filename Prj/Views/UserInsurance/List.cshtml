
@model TSSN.FTE.Insurance.DTO.SearchUserInsuranceDto
@using TSSN.FTE.Insurance.Web.Infrastructure.Extensions

@{
    ViewBag.Title = "List";
}

@section contents {
    @Styles.Render("~/Content/datatable")
    <link href="~/Content/PersianDatePicker.min.css" rel="stylesheet" />
    @Styles.Render("~/Content/fileinput")
}

<div class="row">
    <div class="col-sm-12">
        <div class="page-title-box" style="height:40px;padding-top:9px;">
            <ol class="breadcrumb pull-left">
                <li class="active">اطلاعات بیمه شدگان</li>
                @* <li class="active">ثبت هزینه</li>*@
            </ol>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="dialog-edit" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
</div>

<div class="row">
    <div class="col-sm-12">
        <div class="filter-box">
            <button aria-controls="show-search" aria-expanded="false" class="btn btn-search waves-effect waves-light btn-block" data-target="#show-search" data-toggle="collapse" type="button">
                <i class="fa fa-search"></i>
                جهت تنظیم گزینه های جستجو کلیک کنید
            </button>
        </div>
        <div class="card-box table-responsive">
            @Html.Partial("_SearchInsured", Model)
            @if (User.IsBroker() || User.IsAdmin() || User.IsEvaluatorExpert() || User.IsCompany())
            {
                using (Html.BeginForm("DownloadExcel", "UserInsurance", FormMethod.Post, new { id = "downloadExcelForm" }))
                {
                    <div class="row">
                        <div class="col-md-3">
                            <a href="javascript:document.getElementById('downloadExcelForm').submit()"><i class="md md-file-download"></i> دانلود قالب فایل اکسل</a>
                        </div>
                    </div>
                }


                using (Html.BeginForm("UploadExcel", "UserInsurance", FormMethod.Post, new { enctype = "multipart/form-data", id = "uploadExcelForm" }))
                {
                    @Html.HiddenFor(m => m.CompanyInsuranceId);

                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="input-group">
                                    <span class="input-group-btn">
                                        <label class="btn btn-success btn-file">
                                            انتخاب فایل<input type="file" style="display: none;" id="FileUpload" name="FileUpload">
                                        </label>
                                    </span>
                                    <input type="text" id="uploadFile" class="form-control small" readonly />
                                </div>

                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <button type="submit" class="btn btn-primary waves-effect waves-light"> <i class="fa fa-file-excel-o btn-icon m-r-5"></i> <span>بارگزاری فایل اکسل</span> </button>
                            </div>
                        </div>
                    </div>
                }
            }
            <table id="datatable" class="table table-striped table-bordered table-hover">
                <thead class="bordered-primary">
                    <tr>
                        @*<th>
                                نام شرکت
                            </th>*@
                        <th>
                            کد ملی بیمار
                        </th>
                        <th>
                            نام و نام خانوادگی بیمار
                        </th>
                        <th>
                            کد ملی بیمه شده اصلی
                        </th>
                        <th>
                            نام و نام خانوادگی بیمه شده اصلی
                        </th>
                        <th>
                            نسبت
                        </th>
                        @*<th>
                                محل صدور
                            </th>*@
                        <th>
                            کد شبا
                        </th>
                        <th>
                            مسکن کارت
                        </th>
                        <th>
                            شماره حساب
                        </th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

@section scripts {


    @Scripts.Render("~/bundles/datatable")
    @Scripts.Render("~/bundle/core-app")
    @Scripts.Render("~/bundles/autocomplete")
    <script src="~/plugins/jquery.form/jquery.form.min.js"></script>


    <script type="text/javascript">
        $(document).ready(function () {

            // #region datatable

            var oTable = $('#datatable').DataTable({
                "bFilter": false,
                "bLengthChange": false,
                "bProcessing": true,
                "bServerSide": true,
                //"deferLoading": 0,
                "sAjaxSource": '@Url.Action(MVC.UserInsurance.ActionNames.GetCompanyUsers, MVC.UserInsurance.Name)',
                "sServerMethod": "GET",
                "fnServerData": function (sSource, aoData, fnCallback, oSettings) {
                    //showLoading();
                    oSettings.jqXHR = $.ajax({
                        "dataType": 'json',
                        "type": "POST",
                        "url": sSource,
                        "data": aoData,
                        "success": function (data) {
                            //hideLoading();
                            if (data.success == false) {
                                //$("div.alert-danger").empty().append("خطا در پردازش اطلاعات رخ داده است.").fadeIn(300).delay(3000).fadeOut(400);
                                var err = data.error.allReplace({ '\n': '<br>' });
                                errorNotify(err);
                            }
                            else
                                fnCallback(data);
                        }
                    });
                },
                "fnServerParams": function (aoData) {
                    var CompanyInsuranceId = $("#CompanyInsuranceId").val();
                    //var noHazineh = $("#NoHazinehId").val();
                    //var transDate = $("#TransDate").val();
                    var patientNationalCode = $("#searchInsured #PatientNationalCode").val();
                    var mainNationalCode = $("#searchInsured #MainNationalCode").val();
                    var patientName = $("#searchInsured #PatientName").val();
                    var mainName = $("#searchInsured #MainName").val();

                    aoData.push({ name: "CompanyInsuranceId", value: CompanyInsuranceId });
                    aoData.push({ name: "PatientNationalCode", value: patientNationalCode });
                    aoData.push({ name: "MainNationalCode", value: mainNationalCode });
                    aoData.push({ name: "PatientName", value: patientName });
                    aoData.push({ name: "MainName", value: mainName });
                },
                //"iDisplayLength": 10,
                "aaSorting": [[3, 'desc']],
                //"sPaginationType": "bootstrap",
                //"pagingType": "numbers",
                //"sDom": "Tflt<'row DTTTFooter'<'col-sm-6'i><'col-sm-6'p>>",
                //"sPaginationType": "bootstrap",
                //"sDom": "Tflt<'row DTTTFooter'<'col-sm-6'i><'col-sm-6'p>>",
                "language": {
                    "processing": "در حال پردازش ...",
                    "lengthMenu": "نمایش _MENU_ رکورد در صفحه",
                    "zeroRecords": "رکوردی یافت نشد",
                    "info": "نمایش _START_ تا _END_ از _TOTAL_ رکورد",
                    "infoEmpty": "",
                    "paginate": {
                        "first": "اول",
                        "last": "آخر",
                        "next": "بعدی",
                        "previous": "قبلی"
                    },
                },
                "aoColumns": [
                            { className: "farsi-digit", "mDataProp": "PatientNationalCode", "sWidth": "5%" },
                            { "mDataProp": "PatientName", "sWidth": "13%" },
                            { className: "farsi-digit", "mDataProp": "MainNationalCode", "sWidth": "12%" },
                            { "mDataProp": "MainName", "sWidth": "15%" },
                            { "mDataProp": "RelationTypeTitle", "sWidth": "5%" },
                            { className: "farsi-digit", "mDataProp": "ShebaNo", "sWidth": "5%" },
                            { className: "farsi-digit", "mDataProp": "BankCardNumber", "sWidth": "5%" },
                            { className: "farsi-digit", "mDataProp": "BankAccountNumber", "sWidth": "10%" },
                ]

            });
        });
        // #endregion

        // #region File Upload

        $(document).on('change', ':file', function () {
            var input = $(this),
                numFiles = input.get(0).files ? input.get(0).files.length : 1,
                label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
            input.trigger('fileselect', [numFiles, label]);
        });

        $(':file').on('fileselect', function (event, numFiles, label) {
            //console.log(numFiles);
            //console.log(label);
            $('#uploadFile').val(label);
        });

        var bar = $('.progress-bar');
        var percent = $('.progress-bar');
        // var status = $('#status');

        $('#uploadExcelForm').ajaxForm({
            beforeSend: function () {
                //   status.empty();
                var percentVal = '0%';
                bar.width(percentVal)
                percent.html(percentVal);
            },
            uploadProgress: function (event, position, total, percentComplete) {
                showLoading();
                var percentVal = percentComplete + '%';
                bar.width(percentVal)
                percent.html(percentVal);
            },
            success: function (data) {
                hideLoading();
                var percentVal = '100%';
                bar.width(percentVal)
                percent.html(percentVal);
                if (data.success == true) {
                    successNotify('اطلاعات با موفقیت ذخیره شد');
                }
                else if (data.success == false) {
                    var err = data.error.allReplace({ '\n': '<br>' });
                    errorNotify(err);
                }
            },
            complete: function (xhr) {
                //   status.html(xhr.responseText);
            }
        });

        // #endregion

        // #region Filter

        $(document).on("click", ".insured-search-button", function (event) {
            refreshTable();
        });

        $(document).on("click", ".insured-remove-filtr", function (event) {

            $("#searchInsured #PatientNationalCode").val('');
            $("#searchInsured #PatientName").val('');
            $("#searchInsured #MainNationalCode").val('');
            $("#searchInsured #MainName").val('');

            refreshTable();
        });

        // #endregion

        function ShowModal() {
            $('#TransModal').modal('show');
        }

        function ShowModalEdit() {
            $('#TransModalEdit').modal('show');
        }

        function refreshTable() {

            var table = $('#datatable').DataTable();
            table.ajax.reload();
        }

        function editDocument(id) {

            //url = $(this).attr('href');
            url = "/User/_Edit?id=" + id;
            var btn = $(this);

            //btn.button('loading');
            showLoading();

            var initPrev = [];
            var initPrevConfig = [];

            $.ajax({
                type: "GET",
                url: "/FileUpload/GetFileDetailByUserInsuranceId",
                data: { userInsuranceId: id },
                async: false,

                success: function (data, status) {

                    if (data != false) {
                        initPrevConfig.push({ type: "pdf", caption: data.Name, size: data.Size, showDelete: false });
                        initPrev.push('/FileUpload/DownloadPDF?userInsuranceId=' + id);
                    }
                }
            });
        }



        $("#dialog-edit").load(url, function () {

            bootbox.dialog({
                message: $("#dialog-edit").html(),
                title: "اطلاعات کاربر",
                className: "modal-darkorange"
            });

            var $input = $(".document-file");

            $input.fileinput({
                uploadUrl: "/FileUpload/Upload",
                language: "fa",
                uploadAsync: false,
                allowedFileTypes: ["pdf"],
                autoReplace: true,
                maxFileCount: 1,
                overwriteInitial: true,
                showUploadedThumbs: false,
                initialPreview: initPrev,

                //    [
                //    // PDF DATA
                //    //'http://kartik-v.github.io/bootstrap-fileinput-samples/samples/pdf-sample.pdf',
                //    //'/FileUpload/DownloadPDF?userInsuranceId=' + id,
                //    //''
                //],
                initialPreviewAsData: true, // identify if you are sending preview data only and not the raw markup
                initialPreviewFileType: 'pdf', // image is the default and can be overridden in config below
                initialPreviewConfig: initPrevConfig,
                //[
                //{ type: "pdf", caption: "document.pdf", size: "10000", url: "/FileUpload/DeleteDocument?userInsuranceId=" + id, key: id, showDelete: false },
                //],
                //initialPreviewShowDelete: false,
                showRemove: false,
                showClose: false,
                showUpload: false,
                layoutTemplates: { actionDelete: '' }, // disable thumbnail deletion

                dropZoneEnabled: false,
                deleteUrl: "/FileUpload/DeleteDocument?userInsuranceId=" + id,
                maxFileSize: 10000,


                browseClass: "btn btn-success",
                //browseIcon: "<i class=\"glyphicon glyphicon-picture\"></i> ",
                //removeClass: "btn btn-danger",
                //removeIcon: "<i class=\"glyphicon glyphicon-trash\"></i> ",
                //uploadClass: "btn btn-info",
                //uploadIcon: "<i class=\"glyphicon glyphicon-upload\"></i> "

                //layoutTemplates: {
                //    main1: "{preview}\n" +
                //    "<div class=\'input-group {class}\'>\n" +
                //    "   <div class=\'input-group-btn\'>\n" +
                //    "       {browse}\n" +
                //    "       {upload}\n" +
                //    "       {remove}\n" +
                //    "   </div>\n" +
                //    "   {caption}\n" +
                //    "</div>"
                //}
                //purifyHtml: true, // this by default purifies HTML data for preview
                //uploadExtraData: {
                //    img_key: "1000",
                //    img_keywords: "happy, places",
                //}
            })
            .on("filebatchselected", function (event, files) {
                // trigger upload method immediately after files are selected
                $input.fileinput("upload");
            });

            $("#kvFileinputModal").detach().appendTo('.bootbox .modal');

            hideLoading();
        });




    </script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
}

